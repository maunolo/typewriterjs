// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typewriter methods deleteChars should add event items for amount of characters 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
]
`;

exports[`Typewriter methods pasteString should correctly add event items to queue if string does not contain html 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "Hello world!",
      "node": null,
    },
    "eventName": "PASTE_STRING",
  },
]
`;

exports[`Typewriter methods removeCharacters should add event items for amount of characters 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
  {
    "eventArgs": {},
    "eventName": "REMOVE_CHARACTER",
  },
]
`;

exports[`Typewriter methods runEventLoop should reset queue correctly if event queue is empty and loop option is true 1`] = `
[
  {
    "eventArgs": {
      "delay": 5000,
    },
    "eventName": "CHANGE_DELAY",
  },
]
`;

exports[`Typewriter methods runEventLoop valid delta REMOVE_ALL should correctly push remove last node events with speed change when provided 1`] = `
[
  {
    "eventArgs": {
      "speed": 100,
      "temp": true,
    },
    "eventName": "CHANGE_DELETE_SPEED",
  },
  {
    "eventArgs": {
      "removingCharacterNode": false,
    },
    "eventName": "REMOVE_LAST_VISIBLE_NODE",
  },
  {
    "eventArgs": {
      "speed": 10,
      "temp": true,
    },
    "eventName": "CHANGE_DELETE_SPEED",
  },
]
`;

exports[`Typewriter methods runEventLoop valid delta REMOVE_ALL should correctly push remove last node events without speed change 1`] = `
[
  {
    "eventArgs": {
      "removingCharacterNode": false,
    },
    "eventName": "REMOVE_LAST_VISIBLE_NODE",
  },
]
`;

exports[`Typewriter methods typeCharacters should add event items for amount of characters 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "h",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "0",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
]
`;

exports[`Typewriter methods typeOutAllStrings should correctly add event item to queue when options.strings is a string 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "H",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "d",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
]
`;

exports[`Typewriter methods typeOutAllStrings should correctly add multiple event items to queue when options.strings is an array 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "H",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "d",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": ",",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "character": "H",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "character": "a",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "character": "y",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "u",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "?",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
]
`;

exports[`Typewriter methods typeOutHTMLString should correctly add event item when string contains only string 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "t",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "s",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "t",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
]
`;

exports[`Typewriter methods typeOutHTMLString should correctly add event items for html wrapper and all string characters 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "node": <strong />,
      "parentNode": null,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "character": "h",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "d",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "node": <div />,
      "parentNode": null,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "character": "h",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "a",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "y",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "u",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "?",
      "node": <div />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "node": <p />,
      "parentNode": null,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "character": "G",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "g",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": <p />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
]
`;

exports[`Typewriter methods typeOutHTMLString should correctly add event items for nested html and parent node 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "node": <div
        class="wrapper"
      />,
      "parentNode": <div
        class="parent-node"
      />,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "node": <p />,
      "parentNode": <div
        class="wrapper"
      />,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "node": <strong />,
      "parentNode": <p />,
    },
    "eventName": "ADD_HTML_TAG_ELEMENT",
  },
  {
    "eventArgs": {
      "character": "t",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "s",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "t",
      "node": <strong />,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": <div
        class="wrapper"
      />,
    },
    "eventName": "TYPE_CHARACTER",
  },
]
`;

exports[`Typewriter methods typeString should correctly add event items to queue if string does not contain html 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "H",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": " ",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "d",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
]
`;

exports[`Typewriter shoud setup correctly with default settings 1`] = `
{
  "calledEvents": [],
  "cursorAnimation": null,
  "elements": {
    "container": <div
      id="test"
    >
      <span
        class="Typewriter__wrapper"
      />
      <span
        class="Typewriter__cursor"
      >
        |
      </span>
    </div>,
    "cursor": <span
      class="Typewriter__cursor"
    >
      |
    </span>,
    "wrapper": <span
      class="Typewriter__wrapper"
    />,
  },
  "eventLoop": null,
  "eventLoopPaused": false,
  "eventQueue": [
    {
      "eventArgs": {},
      "eventName": "REMOVE_ALL",
    },
    {
      "eventArgs": {
        "cursor": "|",
      },
      "eventName": "CHANGE_CURSOR",
    },
  ],
  "initialOptions": {
    "autoStart": false,
    "cursor": "|",
    "cursorClassName": "Typewriter__cursor",
    "delay": "natural",
    "deleteSpeed": "natural",
    "devMode": false,
    "loop": false,
    "onCreateTextNode": null,
    "onRemoveNode": null,
    "pauseFor": 1500,
    "skipAddStyles": false,
    "stringSplitter": null,
    "strings": null,
    "wrapperClassName": "Typewriter__wrapper",
  },
  "lastFrameTime": null,
  "pauseUntil": null,
  "reverseCalledEvents": [],
  "visibleNodes": [],
}
`;

exports[`Typewriter shoud setup correctly with default settings 2`] = `
{
  "autoStart": false,
  "cursor": "|",
  "cursorClassName": "Typewriter__cursor",
  "delay": "natural",
  "deleteSpeed": "natural",
  "devMode": false,
  "loop": false,
  "onCreateTextNode": null,
  "onRemoveNode": null,
  "pauseFor": 1500,
  "skipAddStyles": false,
  "stringSplitter": null,
  "strings": null,
  "wrapperClassName": "Typewriter__wrapper",
}
`;

exports[`Typewriter should correctly setup container element with element 1`] = `
<div
  id="test"
>
  <span
    class="Typewriter__wrapper"
  />
  <span
    class="Typewriter__cursor"
  >
    |
  </span>
</div>
`;

exports[`Typewriter should correctly setup container element with selector 1`] = `
<div
  id="test"
>
  <span
    class="Typewriter__wrapper"
  />
  <span
    class="Typewriter__cursor"
  >
    |
  </span>
</div>
`;

exports[`Typewriter should correctly setup queue if autostart is set to true 1`] = `
[
  {
    "eventArgs": {},
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "cursor": "|",
    },
    "eventName": "CHANGE_CURSOR",
  },
  {
    "eventArgs": {
      "character": "H",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "e",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
  {
    "eventArgs": {
      "character": "w",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "o",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "r",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "l",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "d",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "character": "!",
      "node": null,
    },
    "eventName": "TYPE_CHARACTER",
  },
  {
    "eventArgs": {
      "ms": 1500,
    },
    "eventName": "PAUSE_FOR",
  },
  {
    "eventArgs": {
      "speed": "natural",
    },
    "eventName": "REMOVE_ALL",
  },
]
`;
